openapi: 3.0.2
info:
    title: Todo
    version: 1.0.0
paths:
    /users:
        summary: Path used to manage the list of users.
        description: >-
            The REST endpoint/path used to list and create zero or more `User` entities.  This path contains a
            `GET` and `POST` operation to perform the list and create tasks, respectively.
        post:
            requestBody:
                description: A new `User` to be created.
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                required: true
            tags:
                - /users
            responses:
                '201':
                    description: Successful response.
                '400':
                    content:
                        text/html:
                            examples:
                                Email and password required:
                                    value: Email and password required
                    description: Bad Request.
                '409':
                    content:
                        text/html:
                            examples:
                                Email already exists:
                                    value: Email already exists
                    description: Conflict.
            operationId: createUser
            summary: Create a User
            description: Creates a new instance of a `User`.
    /sessions:
        summary: Path used to manage the list of sessions.
        description: >-
            The REST endpoint/path used to list and create zero or more `Session` entities.  This path
            contains a `GET` and `POST` operation to perform the list and create tasks, respectively.
        post:
            requestBody:
                description: A new `Session` to be created.
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                required: true
            tags:
                - /sessions
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Session'
                    description: Successful response.
                '401':
                    content:
                        text/html:
                            examples:
                                Invalid email or password:
                                    value: Invalid email or password
                    description: Unauthorized.
            operationId: createSession
            summary: Create a Session
            description: Creates a new instance of a `Session`.
        delete:
            tags:
                - /sessions
            responses:
                '204':
                    description: Session destroyed.
                '401':
                    content:
                        text/html:
                            examples:
                                Authorization header required:
                                    value: Authorization header required
                                Invalid session token:
                                    value: Invalid session token
                                Invalid authorization header format:
                                    value: Invalid authorization header format
                    description: Unauthorized.
            security:
                -
                    Bearer: []
            summary: Destroy a Session
            description: Deletes a `Session`.
    /items:
        get:
            tags:
                - /items
            responses:
                '200':
                    content:
                        application/json:
                            examples:
                                Description:
                                    value:
                                        -
                                            description: asdfasdf
                    description: List of user items
            deprecated: false
            security:
                -
                    Bearer: []
            description: Get items
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/item'
                required: true
            tags:
                - /items
            responses:
                '201':
                    content:
                        application/json:
                            examples:
                                Add item:
                                    value:
                                        description: fasdf
                    description: Item added
                '400':
                    content:
                        text/html:
                            examples:
                                Description required:
                                    value: Description required
                    description: Bad Request. The request is missing or has an invalid 'description' field.
                '401':
                    content:
                        text/html:
                            examples:
                                Authorization header required:
                                    value: Authorization header required
                                Invalid session token:
                                    value: Invalid session token
                                Invalid authorization header format:
                                    value: Invalid authorization header format
                    description: >-
                        The client making the request lacks valid authentication credentials for the target
                        resource.
            security:
                -
                    Bearer: []
    '/items/{id}':
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: string
                        examples:
                            Description:
                                value:
                                    description: mina
                required: true
            tags:
                - '/items/{id}'
            responses:
                '200':
                    content:
                        application/json:
                            examples:
                                '{"id":133,"description":"karu","userId":26,"completed":false}':
                                    value:
                                        id: 133
                                        description: karu
                                        userId: 26
                                        completed: false
                    description: Item updated
                '400':
                    content:
                        text/html:
                            examples:
                                Description required:
                                    value: Description required
                    description: Description required
                '401':
                    content:
                        text/html:
                            examples:
                                Authorization header required:
                                    value: Authorization header required
                                Invalid session token:
                                    value: Invalid session token
                                Invalid authorization header format:
                                    value: Invalid authorization header format
                    description: >-
                        The client making the request lacks valid authentication credentials for the target
                        resource.
                '404':
                    content:
                        text/html:
                            examples:
                                Item not found:
                                    value: Item not found
                    description: Item not found
            security:
                -
                    Bearer: []
            description: Update item
        delete:
            tags:
                - /items
            responses:
                '204':
                    description: Item successfully deleted
                '401':
                    content:
                        text/html:
                            examples:
                                Authorization header required:
                                    value: Authorization header required
                                Invalid session token:
                                    value: Invalid session token
                                Invalid authorization header format:
                                    value: Invalid authorization header format
                    description: >-
                        The client making the request lacks valid authentication credentials for the target
                        resource.
                '404':
                    content:
                        text/html:
                            examples:
                                Item not found:
                                    value: Item not found
                    description: Item not found
            security:
                -
                    Bearer: []
        parameters:
            -
                name: id
                in: path
                required: true
components:
    schemas:
        User:
            title: Root Type for User
            description: ''
            type: object
            properties:
                email:
                    type: string
                password:
                    type: string
            example:
                email: a@a.com
                password: secret
        Session:
            title: Root Type for Session
            description: ''
            type: object
            properties:
                sessionToken:
                    type: string
            example:
                sessionToken: 2b3c3338-7fd4-4434-8f3d-cb4fbdeba0e0
        item:
            title: Root Type for item
            description: ''
            type: object
            properties:
                id:
                    format: int32
                    type: integer
                description:
                    type: string
                userId:
                    format: int32
                    type: integer
            example:
                id: 25
                description: jouuuu
                userId: 26
    securitySchemes:
        Bearer:
            scheme: bearer
            type: http
tags:
    -
        name: /users
        description: Create users.
    -
        name: /sessions
        description: Sign in and Sign out.
